---
title: "MVML Interactions"

skybox:
  color: 0x659cef

scene:
- primitive: box
  color: red
  scale: (5,5,5)
  position: (-10,3,-30)
  name: red-box

- primitive: box
  color: blue
  scale: (5,5,5)
  position: (10,3,-30)
  name: blue-box
  # You can use this attribute to set interactions with an object.
  # All of the values are strings that represent the JavaScript to run when triggered.
  on:
    
    # Click allows you to trigger scripts when this object is clicked.
    # You can make use of MVML helpers to rotate or move an object.
    # All the helpers take a selector, either a string for name, integer for id, or object for the object itself.
    click: MVML.rotate('red-box').to(10,-80,35);
    
    # Bump allows you to trigger scripts when something collides with this object.
    # Note that this is any collision with any object. Use an if statement to narrow this if required.
    # You can also make use of multi-line YAML to forge complex scripts.
    bump: >
      this.material.color.set('white');
      this.material.ambient.set('white');
      MVML.move(this).by(0,0,-20);
      console.log('You spooked me! :o');
    
    # 'this' will refer to the object being triggered.
    # Also note that we make use of core JS, Three.js, and MVML helpers together.

- primitive: plane
  position: (0,-2, 0)
  scale: (200,200,1)
  rotation: (-90,0,0)
  texture: /img/grass.jpg
  specular: black
  shininess: 0

- light: directional
  position: (0,1,1)

- light: ambient
  color: 0x505050
