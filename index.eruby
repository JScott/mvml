<!doctype html>
<html lang="en">
  <head>
    <title><%= title %></title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">

    <script src="//cdnjs.cloudflare.com/ajax/libs/three.js/r67/three.min.js"></script>
    <script src="js/Detector.js"></script>
    <script src="js/OrbitControls.js"></script>
    <script src="js/KeyboardState.js"></script>
    <script src="js/THREEx.FullScreen.js"></script>
    <script src="js/THREEx.WindowResize.js"></script>
  </head>
  <body>
    <div id="ThreeJS" style="position: absolute; left:0px; top:0px"></div>
    <script>
      var container, scene, camera, renderer, controls;
      var keyboard = new KeyboardState();
      var clock = new THREE.Clock();

      var mesh;

      init();
      animate();
      function init() 
      {
        // SCENE
        scene = new THREE.Scene();
        // CAMERA
        var SCREEN_WIDTH = window.innerWidth, SCREEN_HEIGHT = window.innerHeight;
        var VIEW_ANGLE = 45, ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT, NEAR = 0.1, FAR = 20000;
        camera = new THREE.PerspectiveCamera( VIEW_ANGLE, ASPECT, NEAR, FAR);
        scene.add(camera);
        camera.position.set(0,5,30);
        camera.lookAt(0,5,31);//scene.position);  
        // RENDERER
        if ( Detector.webgl )
          renderer = new THREE.WebGLRenderer( {antialias:true} );
        else
          renderer = new THREE.CanvasRenderer(); 
        renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);
        container = document.getElementById( 'ThreeJS' );
        container.appendChild( renderer.domElement );
        // EVENTS
        THREEx.WindowResize(renderer, camera);
        THREEx.FullScreen.bindKey({ charCode : 'm'.charCodeAt(0) });
        // CONTROLS
        controls = new THREE.OrbitControls( camera, renderer.domElement );
        // LIGHT
        var light = new THREE.PointLight(0xffffff);
        light.position.set(1,2.5,1);
        scene.add(light);
        // SKYBOX
        var skyBoxGeometry = new THREE.BoxGeometry( 10000, 10000, 10000 );
        var skyBoxMaterial = new THREE.MeshBasicMaterial( { color: 0x9999ff, side: THREE.BackSide } );
        var skyBox = new THREE.Mesh( skyBoxGeometry, skyBoxMaterial );
        scene.add(skyBox);


        // SCENE
        var geometry, material;
        <% for object in objects %>
        geometry = new THREE.<%= object[:render_call] %>(<%= object[:scale] %>);
        material = new THREE.MeshLambertMaterial( { color: <%= object[:color] %> } );
        mesh = new THREE.Mesh( geometry, material );
        mesh.position.set(<%= object[:position] %>);
        mesh.rotation.set(<%= object[:rotation] %>);
        scene.add(mesh);
        <% end %>
        /*var floorTexture = new THREE.ImageUtils.loadTexture( 'images/checkerboard.jpg' );
        floorTexture.wrapS = floorTexture.wrapT = THREE.RepeatWrapping; 
        floorTexture.repeat.set( 10, 10 );
        var floorMaterial = new THREE.MeshBasicMaterial( { map: floorTexture, side: THREE.DoubleSide } );*/
      }

      function animate() 
      {
        requestAnimationFrame( animate );
        render();   
        update();
      }

      function update()
      {
        if ( keyboard.pressed("z") ) 
        {   
          // do something
        }
        controls.update();
      }

      function render() 
      {
        renderer.render( scene, camera );
      }
    </script>
  </body>
</html>